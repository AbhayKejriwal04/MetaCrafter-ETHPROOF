// SPDX-License-Identifier: MIT
pragma solidity ^0.8.3;

// Array- dynamic or fixed size 
// initialization
// insert (push), get, update,delete,pop,length
// creating array in memory
// returning array from function

contract Array{
    uint[] public nums=[1,2,3];// dynamic array
    uint[3] public numsFixed=[4,5,6];//fixed size array

    //operations that can be formed in array
    function examples() external {
        nums.push(4); //[1,2,3,4]
        uint x= nums[1];
        nums[2]=777;//[1,2,777,4]
        delete nums[1];//[1,0,777,4] default value after deleting is zero
        nums.pop();//[1,0,777]
        uint len=nums.length;

        //creating a memory in array
        uint[] memory a=new uint[] (5); //memory in array should be in fixed size 
        //because array in memory is fixed therefore we won't be able to use push or pop function
        a[1]=123;
    }

    function returnArray() external view returns (uint[] memory){
        return nums;
    }

}
